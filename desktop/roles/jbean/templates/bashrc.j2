# .bashrc
#########
# Controlled by Ansible!!! do not edit!
#########

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

PATH=$PATH:$HOME/.local/bin

#The first command changes the .history file mode to append.
# And the second configures the history -a command to be run at each shell prompt. 
#The -a immediately writes the current/new lines to the history file.
shopt -s histappend
export HISTCONTROL=ignoredups
export HISTSIZE=10000
export HISTTIMEFORMAT="%d/%m/%y %T "

source ~/.git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWCOLORHINTS=1
export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
# ${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\]
# export PROMPT_COMMAND='__git_ps1 "[\u@\h \w"] "\\\$ "'

# This is broken for the virtual environmnet mixed with git right now...
#PROMPT_COMMAND='__git_ps1 "${PYTHON_VIRTUALENV}\[\033[01;32m\][\u@\h\[\033[01;34m\] \w]" "\\\$ ""\[\033[00m\]"'
#PROMPT_COMMAND="set_virtualenv ${PROMPT_COMMAND}"


PROMPT_COMMAND='__git_ps1 "\[\033[01;32m\][\u@\h\[\033[01;34m\] \w]" "\\\$ ""\[\033[00m\]"'

# This appends to history as soon as you run a command
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"


export PROMPT_COMMAND
export PATH

# User specific aliases and functions

# Determine active Python virtualenv details.
function set_virtualenv () {
	if [[ -z "$VIRTUAL_ENV" ]] ; then
	   PYTHON_VIRTUALENV=""
	else
	   PYTHON_VIRTUALENV="(\e[37m\e[4m`basename \"$VIRTUAL_ENV\"`\e[0m)"
	fi
}